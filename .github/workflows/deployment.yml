name: Lint and Deploy React Vite Project
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Pull Code
        uses: actions/checkout@v5
      - name: Cache and Install dependencies
        id: cache-deps
        uses: ./.github/actions
        with:
          enabled-caching: 'false'
      - name: Was caching used?
        run: |
          echo 'Caching value on linter job was: ${{ steps.cache-deps.outputs.was-cache-used }}'
      - name: Running Linter
        run: npm run lint
  tester:
    runs-on: ubuntu-latest
    steps:
      - name: Pull Code
        uses: actions/checkout@v5
      - name: Cache and Install dependencies
        uses: ./.github/actions
      - name: Run Tests
        continue-on-error: true
        id: run_tests
        run: npm test
      - name: Generating Test Report Artifact
#        if: failure() && steps.run_tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report-artifact
          path: test.json
  builder:
    needs: tester
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.test-file }}
    steps:
      - name: Pull Code
        uses: actions/checkout@v5
      - name: Cache and Install dependencies
        uses: ./.github/actions
      - name: Build Website Dist Folder
        run: npm run build
      - name: Publish JS Filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'test-file={}' >> $GITHUB_OUTPUT ';'
      - name: Generating Artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-dist-artifact
          path: ./dist
  deployer:
    needs: builder
    uses: ./.github/workflows/template.yml
    with:
      artifact_name: react-dist-artifact
#      - name: Output Produced From The Builder Job
#        run: echo "${{ needs.builder.outputs.script-file }}"
  print-deployer-result:
    needs: deployer
    runs-on: ubuntu-latest
    steps:
      - name: Print Deployer Output
        run: echo "${{ needs.deployer.outputs.print-result }}"
  reporter:
    needs: [linter, deployer]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Mimicking report
        run: |
          echo "generating report"
          echo "${{ toJSON(github) }}"
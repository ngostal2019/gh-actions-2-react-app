name: Lint and Deploy React Vite Project
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Pull Code
        uses: actions/checkout@v5
      - name: Caching Dependencies Installation
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci # Install all dependencies from the package-lock.json file
      - name: Running Linter
        run: npm run lint
  tester:
    needs: linter
    runs-on: ubuntu-latest
    steps:
      - name: Pull Code
        uses: actions/checkout@v5
      - name: Caching Dependencies Installation
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci # Install all dependencies from the package-lock.json file
      - name: Run Tests
        run: npm test
  builder:
    needs: tester
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.test-file }}
    steps:
      - name: Pull Code
        uses: actions/checkout@v5
      - name: Caching Dependencies Installation
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci # Install all dependencies from the package-lock.json file
      - name: Build Website Dist Folder
        run: npm run build
      - name: Publish JS Filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'test-file={}' >> $GITHUB_OUTPUT ';'
      - name: Generating Artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-dist-artifact
          path: dist
  deployer:
    needs: builder
    runs-on: ubuntu-latest
    steps:
      - name: Downloading Artifact
        uses: actions/download-artifact@v5
        with:
          name: react-dist-artifact
      - name: Verifying Downloaded Artifact Was Successful
        run: ls -ltra
      - name: Output Produced From The Builder Job
        run: echo "${{ needs.builder.outputs.script-file }}"
      - name: Deploy To Cloud
        run: echo "Deploying... "